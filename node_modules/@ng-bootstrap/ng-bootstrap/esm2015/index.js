import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { NgbAccordionModule } from './accordion/accordion.module';
import { NgbAlertModule } from './alert/alert.module';
import { NgbButtonsModule } from './buttons/buttons.module';
import { NgbCarouselModule } from './carousel/carousel.module';
import { NgbCollapseModule } from './collapse/collapse.module';
import { NgbDatepickerModule } from './datepicker/datepicker.module';
import { NgbDropdownModule } from './dropdown/dropdown.module';
import { NgbModalModule } from './modal/modal.module';
import { NgbNavModule } from './nav/nav.module';
import { NgbPaginationModule } from './pagination/pagination.module';
import { NgbPopoverModule } from './popover/popover.module';
import { NgbProgressbarModule } from './progressbar/progressbar.module';
import { NgbRatingModule } from './rating/rating.module';
import { NgbTabsetModule } from './tabset/tabset.module';
import { NgbTimepickerModule } from './timepicker/timepicker.module';
import { NgbToastModule } from './toast/toast.module';
import { NgbTooltipModule } from './tooltip/tooltip.module';
import { NgbTypeaheadModule } from './typeahead/typeahead.module';
import * as ɵngcc0 from '@angular/core';
export { NgbAccordion, NgbAccordionConfig, NgbAccordionModule, NgbPanel, NgbPanelContent, NgbPanelHeader, NgbPanelTitle, NgbPanelToggle } from './accordion/accordion.module';
export { NgbAlert, NgbAlertConfig, NgbAlertModule } from './alert/alert.module';
export { NgbButtonLabel, NgbButtonsModule, NgbCheckBox, NgbRadio, NgbRadioGroup } from './buttons/buttons.module';
export { NgbCarousel, NgbCarouselConfig, NgbCarouselModule, NgbSlide, NgbSlideEventDirection, NgbSlideEventSource } from './carousel/carousel.module';
export { NgbCollapse, NgbCollapseModule } from './collapse/collapse.module';
export { NgbCalendar, NgbCalendarGregorian, NgbCalendarHebrew, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarPersian, NgbDate, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDateParserFormatter, NgbDatepicker, NgbDatepickerConfig, NgbInputDatepickerConfig, NgbDatepickerContent, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerKeyboardService, NgbDatepickerModule, NgbDatepickerMonth, NgbInputDatepicker } from './datepicker/datepicker.module';
export { NgbDropdown, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownModule, NgbDropdownToggle, NgbNavbar } from './dropdown/dropdown.module';
export { ModalDismissReasons, NgbActiveModal, NgbModal, NgbModalConfig, NgbModalModule, NgbModalRef } from './modal/modal.module';
export { NgbNavConfig, NgbNav, NgbNavContent, NgbNavItem, NgbNavLink, NgbNavModule, NgbNavOutlet } from './nav/nav.module';
export { NgbPagination, NgbPaginationConfig, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationModule, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious } from './pagination/pagination.module';
export { NgbPopover, NgbPopoverConfig, NgbPopoverModule } from './popover/popover.module';
export { NgbProgressbar, NgbProgressbarConfig, NgbProgressbarModule } from './progressbar/progressbar.module';
export { NgbRating, NgbRatingConfig, NgbRatingModule } from './rating/rating.module';
export { NgbTab, NgbTabContent, NgbTabset, NgbTabsetConfig, NgbTabsetModule, NgbTabTitle } from './tabset/tabset.module';
export { NgbTimeAdapter, NgbTimepickerI18n, NgbTimepicker, NgbTimepickerConfig, NgbTimepickerModule } from './timepicker/timepicker.module';
export { NgbToast, NgbToastConfig, NgbToastHeader, NgbToastModule } from './toast/toast.module';
export { NgbTooltip, NgbTooltipConfig, NgbTooltipModule } from './tooltip/tooltip.module';
export { NgbHighlight, NgbTypeahead, NgbTypeaheadConfig, NgbTypeaheadModule } from './typeahead/typeahead.module';
const NGB_MODULES = [
    NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,
    NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,
    NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,
    // tslint:disable-next-line:deprecation
    NgbTabsetModule
];
let NgbModule = class NgbModule {
};
NgbModule.ɵfac = function NgbModule_Factory(t) { return new (t || NgbModule)(); };
NgbModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgbModule });
NgbModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,
        NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,
        NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,
        // tslint:disable-next-line:deprecation
        NgbTabsetModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgbModule, [{
        type: NgModule,
        args: [{ imports: NGB_MODULES, exports: NGB_MODULES }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModule, { imports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,
        NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,
        NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,
        // tslint:disable-next-line:deprecation
        NgbTabsetModule], exports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,
        NgbDropdownModule, NgbModalModule, NgbNavModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule,
        NgbRatingModule, NgbTimepickerModule, NgbToastModule, NgbTooltipModule, NgbTypeaheadModule,
        // tslint:disable-next-line:deprecation
        NgbTabsetModule] }); })();
export { NgbModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,