{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ServiceGeneralService {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    // URL to web api\n    this.apiURL = environment.apiURL;\n    // URL api server\n    this.url = environment.apiURL;\n    this.headers = new HttpHeaders();\n    this.headers.append('Access-Control-Allow-Origin', '*');\n    this.headers.append('Access-Control-Allow-Methods', 'POST, GET, OPTIONS, PUT');\n    this.headers.append('Accept', 'application/json');\n    this.headers.append('content-type', 'application/json');\n  }\n  getAPI() {\n    return this.apiURL;\n  }\n  getURL() {\n    return this.url;\n  }\n  serviceGeneralPostWithUrl(url, parametros) {\n    return this.http.post(this.apiURL + url, parametros, {\n      headers: this.headers\n    });\n  }\n  serviceGeneralGet(url) {\n    return this.http.get(this.apiURL + url, {\n      headers: this.headers\n    });\n  }\n  serviceGeneralPut(url, parametros) {\n    return this.http.put(this.apiURL + url, parametros, {\n      headers: this.headers\n    });\n  }\n  serviceGeneralDelete(url) {\n    return this.http.delete(this.apiURL + url, {\n      headers: this.headers\n    });\n  }\n  getCatalogueFrom(catalogo_selected, params = '') {\n    const query = this.http.get(this.apiURL + 'Catalogue/' + catalogo_selected + params, {\n        headers: this.headers\n      }),\n      query_on = new Promise(resolve => {\n        query.subscribe(response => {\n          resolve(response);\n          //console.log(resolve(response));\n        }, error => {\n          resolve(error);\n        });\n      });\n    return query_on.then(result => {\n      if (result.success) return result.result;else return 'Error al pedir el catalogo.';\n    });\n  }\n}\nServiceGeneralService.ɵfac = function ServiceGeneralService_Factory(t) {\n  return new (t || ServiceGeneralService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nServiceGeneralService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceGeneralService,\n  factory: ServiceGeneralService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}